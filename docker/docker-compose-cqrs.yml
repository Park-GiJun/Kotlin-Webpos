version: '3.8'

services:
  # Master DB (Write)
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main_server
      MYSQL_USER: mainuser
      MYSQL_PASSWORD: mainpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-master-data:/var/lib/mysql
      - ./mysql-master.cnf:/etc/mysql/conf.d/mysql.cnf
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW
    networks:
      - cqrs-network

  # Slave DB (Read)
  mysql-slave:
    image: mysql:8.0
    container_name: mysql-slave
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main_server
      MYSQL_USER: readonly_user
      MYSQL_PASSWORD: readonly_password
    ports:
      - "3307:3306"
    volumes:
      - mysql-slave-data:/var/lib/mysql
      - ./mysql-slave.cnf:/etc/mysql/conf.d/mysql.cnf
    command: --server-id=2 --read-only=1
    depends_on:
      - mysql-master
    networks:
      - cqrs-network

  # Redis for caching query results
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - cqrs-network

  # Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cqrs-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - cqrs-network

  # ProxySQL for advanced routing (optional - uncomment when needed)
  # proxysql:
  #   image: proxysql/proxysql
  #   container_name: proxysql
  #   ports:
  #     - "6033:6033"
  #     - "6032:6032"
  #   volumes:
  #     - ./proxysql.cnf:/etc/proxysql.cnf
  #   depends_on:
  #     - mysql-master
  #     - mysql-slave
  #   networks:
  #     - cqrs-network

volumes:
  mysql-master-data:
  mysql-slave-data:
  redis-data:

networks:
  cqrs-network:
    driver: bridge